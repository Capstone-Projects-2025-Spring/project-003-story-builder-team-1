openapi: 3.0.0
info:
  title: Story Builder API
  version: 0.2.0
  description: >-
    API for communication between frontend user interface, LLM Agents, and
    MongoDB Database.
tags:
  - name: courier
    description: >-
      Courier directly interacts with the LLM and Agents using prompts assembled
      by PromptAdmin from information sent by Translator in order to get input
      to further refine.
  - name: prompt_admin
    description: Prompt Admin generates prompts used for various purposes
  - name: db
    description: Database retrieves and stores data from the MongoDB database
  - name: translator
    description: Translator sends data from Courier to the frontend
paths:
  /courier/story_call:
    post:
      tags:
        - courier
      summary: Calls the LLM with a given prompt and returns text.
      description: >-
        Invokes the LLM with a specified prompt to generate a story snippet and
        returns the resulting text.
      operationId: story_call
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - messages
              properties:
                data:
                  type: object
                  description: >-
                    Data formatted for the agent, passed directly to
                    `/agent/generate`
                messages:
                  type: string
                  description: >-
                    The user message content to be pushed into the interaction
                    log
      responses:
        '200':
          description: A story snippet
          content:
            application/json:
              schema:
                type: string
        '400':
          description: invalid input
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden request
        '500':
          description: Internal server error
  /courier/story_push:
    post:
      tags:
        - courier
      summary: Pushes local story content to the system.
      description: >-
        Uploads local story content to the system for processing or integration
        with other system components.
      operationId: story_push
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                local_story:
                  type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /courier/judge:
    get:
      tags:
        - courier
      summary: Invokes the judge() method to get a list of judgments/results
      description: >-
        Executes the `judge()` method to retrieve a list of judgment results
        based on previous interactions or criteria.
      operationId: judge
      responses:
        '200':
          description: A list of judgments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          description: Internal server error
  /prompt_admin/first_chapter:
    post:
      tags:
        - prompt_admin
      summary: Format and send the first chapter's data to courier
      description: >-
        Receives data for the first chapter from translator, engineers a prompt
        using the given data, and sends prompt to the courier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  description: JSON object containing story and extra details
      responses:
        '200':
          description: Prompt successfully sent to courier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: No prompt data received
        '500':
          description: Failed to connect to the courier
  /prompt_admin/next_chapter:
    post:
      tags:
        - prompt_admin
      summary: Format and send data to generate the next chapter
      description: >-
        Receives data for next chapter from translator, engineers a prompt using
        the given data, and sends prompt to the courier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - details
                - story_outline
                - previous_chapters
              properties:
                data:
                  type: object
                  description: Raw data (duplicated but required by backend check)
                details:
                  type: object
                  description: Story details and extra information
                story_outline:
                  type: object
                  description: Current story outline
                previous_chapters:
                  type: array
                  items:
                    type: string
                  description: Previously generated chapters
      responses:
        '200':
          description: Prompt successfully sent to courier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: No prompt data received
        '500':
          description: Failed to connect to the courier
  /prompt_admin/story_outline:
    post:
      tags:
        - prompt_admin
      summary: Format and send data to generate a story outline
      description: >-
        Receives data from translator, engineers a prompt using the given data,
        and sends prompt to the courier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - chaptercount
                - details
              properties:
                data:
                  type: object
                  description: Raw data (duplicated but required by backend check)
                chaptercount:
                  type: integer
                  description: Number of chapters desired
                details:
                  type: object
                  description: Story details and extra info
      responses:
        '200':
          description: Prompt successfully sent to courier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: No prompt data received
        '500':
          description: Failed to connect to the courier
  /db/account_creation:
    post:
      tags:
        - db
      summary: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Account created successfully
        '400':
          description: Username exists or password format invalid
  /db/account_login:
    post:
      tags:
        - db
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid credentials
  /db/user/{user_id}:
    get:
      tags:
        - db
      summary: Get user details
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
        '404':
          description: User not found
  /db/user/{user_id}/delete:
    post:
      tags:
        - db
      summary: Delete user and their stories
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User and stories deleted
  /db/user/{user_id}/update:
    post:
      tags:
        - db
      summary: Update user information
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated
        '400':
          description: Invalid input
  /db/story/{user_id}/create:
    post:
      tags:
        - db
      summary: Create a new story for a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_name
                - prompt
                - agents
              properties:
                story_name:
                  type: string
                prompt:
                  type: object
                  required:
                    - story_details
                    - extra_details
                    - chapter_count
                  properties:
                    story_details:
                      type: string
                    extra_details:
                      type: string
                    chapter_count:
                      type: integer
                agents:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Story created
  /db/story/{user_id}/get_stories:
    get:
      tags:
        - db
      summary: List all stories for a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of stories
  /db/story/{user_id}/{story_id}/get_story:
    get:
      tags:
        - db
      summary: Get a specific story
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: path
          name: story_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Story detail
        '404':
          description: Story not found
  /db/story/{user_id}/{story_id}/{chapter_number}/get_chapter:
    get:
      tags:
        - db
      summary: Get a specific chapter in a story
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: path
          name: story_id
          required: true
          schema:
            type: string
        - in: path
          name: chapter_number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Chapter content
        '404':
          description: Chapter not found
  /db/story/{user_id}/{story_id}/delete:
    post:
      tags:
        - db
      summary: Delete a story
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: path
          name: story_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Story deleted
  /db/story/{user_id}/{story_id}/update:
    post:
      tags:
        - db
      summary: Update a story
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: path
          name: story_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                story_name:
                  type: string
                prompt:
                  type: object
      responses:
        '200':
          description: Story updated
  /db/story/{user_id}/{story_id}/get_number_of_chapters:
    get:
      tags:
        - db
      summary: Get number of chapters in a story
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: path
          name: story_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Number of chapters
  /db/agent/create:
    post:
      tags:
        - db
      summary: Create a new agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - agent_prompt
              properties:
                name:
                  type: string
                agent_prompt:
                  type: string
      responses:
        '200':
          description: Agent created
  /db/agent/{id}/delete:
    post:
      tags:
        - db
      summary: Delete an agent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Agent deleted
        '404':
          description: Agent not found
  /db/agent/{id}/update:
    post:
      tags:
        - db
      summary: Update an agent
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                agent_prompt:
                  type: string
      responses:
        '200':
          description: Agent updated
        '404':
          description: Agent not found
  /translator/first_chapter:
    post:
      tags:
        - translator
      summary: Generate the first chapter of a story
      description: >-
        Obtains first chapter data from frontend, and sends it to prompt_admin
        to eventually receive a chapter draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_name
                - story_details
                - story_outline
              properties:
                story_name:
                  type: string
                  description: The name of the story
                story_details:
                  type: string
                  description: >-
                    Overall details about the story, such as the plot points and
                    characters
                story_outline:
                  type: string
                  description: An outline of the story, chapter by chapter
                extra_details:
                  type: string
                  description: >-
                    More specific details, such as characterization, locations,
                    pacing, etc.
      responses:
        '200':
          description: First chapter generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      courier_response:
                        type: string
        '404':
          description: Missing required fields
        '500':
          description: Server error
  /translator/courier_response:
    post:
      tags:
        - translator
      summary: Store courier response
      description: >-
        Receives and stores responses from the courier when asking for an
        outline or chapter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: string
      responses:
        '200':
          description: Courier response stored successfully
        '404':
          description: Missing courier data
  /translator/story_outline:
    post:
      tags:
        - translator
      summary: Generate a story outline
      description: >-
        Obtains story outline data from frontend, and sends it to prompt_admin
        to eventually receive a story outline draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - chapter_count
                - story_name
                - story_details
              properties:
                chapter_count:
                  type: integer
                  description: The requested number of chapters in the story
                story_name:
                  type: string
                  description: The name of the story
                story_details:
                  type: string
                  description: >-
                    Overall details about the story, such as the plot points and
                    characters
                extra_details:
                  type: string
                  description: >-
                    More specific details, such as characterization, locations,
                    pacing, etc.
      responses:
        '200':
          description: Story outline generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      courier_response:
                        type: string
        '400':
          description: Invalid data type for chapter_count
        '404':
          description: Missing required fields
        '500':
          description: Server error
  /translator/next_chapter:
    post:
      tags:
        - translator
      summary: Generate the next chapter of the story
      description: >-
        Obtains subsequent chapter data from frontend, and sends it to
        prompt_admin to eventually receive a chapter draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_name
                - story_details
                - previous_chapters
                - story_outline
              properties:
                story_name:
                  type: string
                  description: The name of the story
                story_details:
                  type: string
                  description: >-
                    Overall details about the story, such as the plot points and
                    characters
                previous_chapters:
                  type: array
                  items:
                    type: string
                  description: A string array of the previous chapters
                story_outline:
                  type: string
                  description: An outline of the story, chapter by chapter
                extra_details:
                  type: string
                  description: >-
                    More specific details, such as characterization, locations,
                    pacing, etc.
      responses:
        '200':
          description: Next chapter generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      courier_response:
                        type: string
        '400':
          description: Invalid or empty previous_chapters
        '404':
          description: Missing required fields
        '500':
          description: Server error
components: {}
