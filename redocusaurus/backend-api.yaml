openapi: 3.0.0
info:
  title: Story Builder API
  version: 0.2.0
  description: >-
    API for communication between frontend user interface, LLM Agents, and
    MongoDB Database.
tags:
  - name: courier
    description: >-
      Courier directly interacts with the LLM and Agents using prompts assembled
      by PromptAdmin from information sent by Translator in order to get input
      to further refine.
  - name: prompt_admin
    description: Prompt Admin generates prompts used for various purposes
  - name: db
    description: Database retrieves and stores data from the MongoDB database
  - name: translator
    description: Translator sends data from Courier to the frontend
paths:
  /courier/story_call:
    post:
      tags:
        - courier
      summary: Calls the LLM with a given prompt and returns text.
      description: >-
        Invokes the LLM with a specified prompt to generate a story snippet and
        returns the resulting text.
      operationId: story_call
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PLACEHOLDER:
                  type: integer
                key:
                  type: string
                prompt:
                  type: string
      responses:
        '200':
          description: A story snippet
          content:
            application/json:
              schema:
                type: string
        '400':
          description: invalid input
        '401':
          description: Unauthorized access
        '403':
          description: Forbidden request
        '500':
          description: Internal server error
  /courier/story_push:
    post:
      tags:
        - courier
      summary: Pushes local story content to the system.
      description: >-
        Uploads local story content to the system for processing or integration
        with other system components.
      operationId: story_push
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                local_story:
                  type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /courier/judge:
    get:
      tags:
        - courier
      summary: Invokes the judge() method to get a list of judgments/results
      description: >-
        Executes the `judge()` method to retrieve a list of judgment results
        based on previous interactions or criteria.
      operationId: judge
      responses:
        '200':
          description: A list of judgments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          description: Internal server error
  /prompt_admin/first_chapter:
    post:
      tags:
        - prompt_admin
      summary: Format and send the first chapter's data to courier
      description: >-
        Receives data for the first chapter from translator, engineers a prompt
        using the given data, and sends prompt to the courier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  description: JSON object containing story and extra details
      responses:
        '200':
          description: Prompt successfully sent to courier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: No prompt data received
        '500':
          description: Failed to connect to the courier
  /prompt_admin/next_chapter:
    post:
      tags:
        - prompt_admin
      summary: Format and send data to generate the next chapter
      description: >-
        Receives data for next chapter from translator, engineers a prompt using
        the given data, and sends prompt to the courier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - details
                - story_outline
                - previous_chapters
              properties:
                data:
                  type: object
                  description: Raw data (duplicated but required by backend check)
                details:
                  type: object
                  description: Story details and extra information
                story_outline:
                  type: object
                  description: Current story outline
                previous_chapters:
                  type: array
                  items:
                    type: string
                  description: Previously generated chapters
      responses:
        '200':
          description: Prompt successfully sent to courier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: No prompt data received
        '500':
          description: Failed to connect to the courier
  /prompt_admin/story_outline:
    post:
      tags:
        - prompt_admin
      summary: Format and send data to generate a story outline
      description: >-
        Receives data from translator, engineers a prompt using the given data,
        and sends prompt to the courier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
                - chaptercount
                - details
              properties:
                data:
                  type: object
                  description: Raw data (duplicated but required by backend check)
                chaptercount:
                  type: integer
                  description: Number of chapters desired
                details:
                  type: object
                  description: Story details and extra info
      responses:
        '200':
          description: Prompt successfully sent to courier
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: No prompt data received
        '500':
          description: Failed to connect to the courier
  /db/grab:
    get:
      tags:
        - db
      summary: Calls DB_grab() to retrieve some global data.
      description: >-
        Executes the `DB_grab()` method to retrieve important global data used
        across various components of the system.
      operationId: grab
      responses:
        '200':
          description: JSON data
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Data not found
        '500':
          description: Internal server error
  /db/account:
    get:
      tags:
        - db
      summary: Retrieves account info given some input JSON.
      description: >-
        Fetches account information from the database based on the provided
        input JSON query parameters.
      operationId: account
      parameters:
        - in: query
          name: account_query_info
          required: true
          schema:
            type: object
            description: JSON containing account query details.
      responses:
        '200':
          description: JSON account data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid query parameters
        '404':
          description: Account not found
        '500':
          description: Internal server error
  /db/agent:
    get:
      tags:
        - db
      summary: Retrieves agent info.
      description: Retrieves information about an agent from the database.
      operationId: agent
      parameters:
        - in: query
          name: agentId
          required: false
          schema:
            type: string
          description: The ID of the agent to retrieve information for (if needed).
      responses:
        '200':
          description: Successfully retrieved agent data in JSON format
        '400':
          description: Invalid query parameters
        '500':
          description: Internal server error
  /db/new_account:
    post:
      tags:
        - db
      summary: Creates a new account.
      description: >-
        Creates a new user account in the system using the provided input JSON
        data.
      operationId: new_account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: JSON containing new account details.
      responses:
        '200':
          description: JSON status information
          content:
            application/json:
              schema:
                type: object
        '400':
          description: missing or invalid data
        '409':
          description: Account already exists
        '500':
          description: Internal server error
  /db/new_agent:
    post:
      tags:
        - db
      summary: Creates a new agent.
      description: >-
        Creates a new agent record in the system based on the provided input
        JSON details.
      operationId: new_agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: JSON containing new agent details.
      responses:
        '200':
          description: JSON status information
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid request data
        '409':
          description: Agent already exists
        '500':
          description: Internal server error
  /db/agent_dropdown:
    get:
      tags:
        - db
      summary: Returns a list of agents for a dropdown.
      description: Retrieves a list of agents formatted for use in a dropdown interface.
      operationId: agent_dropdown
      responses:
        '200':
          description: JSON list of agents
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: Internal server error
  /translator/first_chapter:
    post:
      tags:
        - translator
      summary: Generate the first chapter of a story
      description: >-
        Obtains first chapter data from frontend, and sends it to prompt_admin
        to eventually receive a chapter draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_name
                - story_details
                - story_outline
              properties:
                story_name:
                  type: string
                story_details:
                  type: string
                story_outline:
                  type: string
                extra_details:
                  type: string
      responses:
        '200':
          description: First chapter generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      courier_response:
                        type: string
        '404':
          description: Missing required fields
        '500':
          description: Server error
  /translator/courier_response:
    post:
      tags:
        - translator
      summary: Store courier response
      description: >-
        Receives and stores responses from the courier when asking for an
        outline or chapter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: string
      responses:
        '200':
          description: Courier response stored successfully
        '404':
          description: Missing courier data
  /translator/story_outline:
    post:
      tags:
        - translator
      summary: Generate a story outline
      description: >-
        Obtains story outline data from frontend, and sends it to prompt_admin
        to eventually receive a story outline draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - chapter_count
                - story_name
                - story_details
              properties:
                chapter_count:
                  type: integer
                story_name:
                  type: string
                story_details:
                  type: string
                extra_details:
                  type: string
      responses:
        '200':
          description: Story outline generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      courier_response:
                        type: string
        '400':
          description: Invalid data type for chapter_count
        '404':
          description: Missing required fields
        '500':
          description: Server error
  /translator/next_chapter:
    post:
      tags:
        - translator
      summary: Generate the next chapter of the story
      description: >-
        Obtains subsequent chapter data from frontend, and sends it to
        prompt_admin to eventually receive a chapter draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_name
                - story_details
                - previous_chapters
                - story_outline
              properties:
                story_name:
                  type: string
                story_details:
                  type: string
                previous_chapters:
                  type: array
                  items:
                    type: string
                story_outline:
                  type: string
                extra_details:
                  type: string
      responses:
        '200':
          description: Next chapter generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      courier_response:
                        type: string
        '400':
          description: Invalid or empty previous_chapters
        '404':
          description: Missing required fields
        '500':
          description: Server error
components: {}
