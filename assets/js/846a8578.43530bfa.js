"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[996],{15088:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>m});var r=n(74848),s=n(28453);const a={sidebar_position:5},i="UML Association Diagram",o={id:"system-architecture/entity-relation-diagram",title:"UML Association Diagram",description:"MongoDB Database Schema Design",source:"@site/docs/system-architecture/entity-relation-diagram.md",sourceDirName:"system-architecture",slug:"/system-architecture/entity-relation-diagram",permalink:"/project-003-story-builder-team-1/docs/system-architecture/entity-relation-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-003-story-builder-team-1/edit/main/documentation/docs/system-architecture/entity-relation-diagram.md",tags:[],version:"current",lastUpdatedBy:"Kamaljeeth Vijay",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"State Diagram",permalink:"/project-003-story-builder-team-1/docs/system-architecture/state-diagram"},next:{title:"Development Environment",permalink:"/project-003-story-builder-team-1/docs/system-architecture/development-environment"}},c={},m=[{value:"MongoDB Database Schema Design",id:"mongodb-database-schema-design",level:3}];function d(e){const t={h1:"h1",h3:"h3",mermaid:"mermaid",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"uml-association-diagram",children:"UML Association Diagram"}),"\n",(0,r.jsx)(t.h3,{id:"mongodb-database-schema-design",children:"MongoDB Database Schema Design"}),"\n",(0,r.jsx)(t.mermaid,{value:'classDiagram\n    direction TB\n\n    class User {\n        +String username\n        +String password\n        +ObjectId[] stories\n        +comparePassword(inputPassword)\n    }\n\n    class Story {\n        +String story_name\n        +ObjectId user\n        +Object prompt\n        +String outline\n        +Critique[] critiques\n        +String story_step\n        +Chapter[] story_content\n        +AgentData[] agents\n    }\n\n    class Persona {\n        +String name\n        +String persona_info\n    }\n\n    class Agent {\n        +String name\n        +Object agent_prompt\n        +Response[] agent_responses\n    }\n\n    class Critique {\n        +Number chapter_number\n        +String critique\n    }\n\n    class Chapter {\n        +Number story_chapter_number\n        +String text\n    }\n\n    class AgentData {\n        +ObjectId agent\n        +String agent_name\n        +ChapterVersion[] chapters\n    }\n\n    class ChapterVersion {\n        +Number chapter_number\n        +String content\n        +Number chapter_votes\n        +String critique\n        +Number critique_votes\n        +String content_thoughts\n        +String critique_thoughts\n    }\n\n    class Response {\n        +String response\n        +ObjectId story_id\n    }\n\n    %% Associations\n    User "1" --\x3e "*" Story : owns\n    Story "1" --\x3e "1" User : written_by\n    Story "*" --\x3e "*" Agent : includes\n    Agent "*" --\x3e "*" Story : responds_to\n    Persona "1" --\x3e "*" Agent : can_create\n\n    %% Arrange Chapter, AgentData, ChapterVersion, Response vertically\n    Chapter --\x3e AgentData\n    AgentData --\x3e ChapterVersion\n    ChapterVersion --\x3e Response'})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(96540);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);