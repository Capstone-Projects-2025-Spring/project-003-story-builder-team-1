"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6041],{80268:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var s=r(74848),t=r(28453);const i={sidebar_position:1},o="Backend API",a={id:"api-specification/backend-api",title:"Backend API",description:"/courier",source:"@site/docs/api-specification/backend-api.md",sourceDirName:"api-specification",slug:"/api-specification/backend-api",permalink:"/project-003-story-builder-team-1/docs/api-specification/backend-api",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-003-story-builder-team-1/edit/main/documentation/docs/api-specification/backend-api.md",tags:[],version:"current",lastUpdatedBy:"Kamaljeeth Vijay",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"API Specification",permalink:"/project-003-story-builder-team-1/docs/category/api-specification"},next:{title:"API 1 - Swagger Petstore",permalink:"/project-003-story-builder-team-1/docs/api-specification/openapi-spec"}},d={},l=[{value:"/courier",id:"courier",level:2},{value:"POST /courier/story_call",id:"post-courierstory_call",level:3},{value:"/courier/story_call",id:"courierstory_call",level:3},{value:"Request Body/Params:",id:"request-bodyparams",level:4},{value:"Returns:",id:"returns",level:4},{value:"POST /courier/story_push",id:"post-courierstory_push",level:3},{value:"Request Body/Params:",id:"request-bodyparams-1",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"GET /courier/judge",id:"get-courierjudge",level:3},{value:"Request Body/Params:",id:"request-bodyparams-2",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"/prompt_admin",id:"prompt_admin",level:2},{value:"GET /prompt_admin/prompt",id:"get-prompt_adminprompt",level:3},{value:"Request Body/Params:",id:"request-bodyparams-3",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"GET /prompt_admin/refine_prompt",id:"get-prompt_adminrefine_prompt",level:3},{value:"Request Body/Params:",id:"request-bodyparams-4",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"GET /prompt_admin/generate",id:"get-prompt_admingenerate",level:3},{value:"Request Body/Params:",id:"request-bodyparams-5",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"GET /prompt_admin/rank",id:"get-prompt_adminrank",level:3},{value:"Request Body/Params:",id:"request-bodyparams-6",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"/db",id:"db",level:2},{value:"GET /db/grab",id:"get-dbgrab",level:3},{value:"Request Body/Params:",id:"request-bodyparams-7",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"GET db/account",id:"get-dbaccount",level:3},{value:"Request Body/Params:",id:"request-bodyparams-8",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"GET /db/agent",id:"get-dbagent",level:3},{value:"Request Body/Params:",id:"request-bodyparams-9",level:4},{value:"Returns:",id:"returns-9",level:4},{value:"POST db/new_account",id:"post-dbnew_account",level:3},{value:"Request Body/Params:",id:"request-bodyparams-10",level:4},{value:"Returns:",id:"returns-10",level:4},{value:"POST db/new_agent",id:"post-dbnew_agent",level:3},{value:"Request Body/Params:",id:"request-bodyparams-11",level:4},{value:"Returns:",id:"returns-11",level:4},{value:"GET /db/agent_dropdown",id:"get-dbagent_dropdown",level:3},{value:"Request Body/Params:",id:"request-bodyparams-12",level:4},{value:"Returns:",id:"returns-12",level:4},{value:"/translator",id:"translator",level:2},{value:"POST /translator/rank_format",id:"post-translatorrank_format",level:3},{value:"Request Body/Params:",id:"request-bodyparams-13",level:4},{value:"Returns:",id:"returns-13",level:4},{value:"POST /translator/writing_session",id:"post-translatorwriting_session",level:3},{value:"Request Body/Params:",id:"request-bodyparams-14",level:4},{value:"Returns:",id:"returns-14",level:4},{value:"POST /translator/write_chapter",id:"post-translatorwrite_chapter",level:3},{value:"Request Body/Params:",id:"request-bodyparams-15",level:4},{value:"Returns:",id:"returns-15",level:4},{value:"GET /translator/story_bank",id:"get-translatorstory_bank",level:3},{value:"Request Body/Params:",id:"request-bodyparams-16",level:4},{value:"Returns:",id:"returns-16",level:4}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"backend-api",children:"Backend API"}),"\n",(0,s.jsx)(n.h2,{id:"courier",children:"/courier"}),"\n",(0,s.jsx)(n.h3,{id:"post-courierstory_call",children:"POST /courier/story_call"}),"\n",(0,s.jsx)(n.h3,{id:"courierstory_call",children:"/courier/story_call"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Calls the LLM with a given prompt and returns text."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"int PLACEHOLDER"}),"\n",(0,s.jsx)(n.li,{children:"String key"}),"\n",(0,s.jsx)(n.li,{children:"String prompt"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"String story_snippet"}),"\n",(0,s.jsx)(n.h3,{id:"post-courierstory_push",children:"POST /courier/story_push"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Pushes local story content to the system."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-1",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"String local_story"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"200 OK"})," on success"]}),"\n",(0,s.jsx)(n.h3,{id:"get-courierjudge",children:"GET /courier/judge"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Invokes the judge() method to get a list of judgments/results"]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-2",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON list_of_judgements"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prompt_admin",children:"/prompt_admin"}),"\n",(0,s.jsx)(n.h3,{id:"get-prompt_adminprompt",children:"GET /prompt_admin/prompt"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Calls prompt(prompt_info) to fetch a prompt string."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-3",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"String prompt_info"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"String prompt"}),"\n",(0,s.jsx)(n.h3,{id:"get-prompt_adminrefine_prompt",children:"GET /prompt_admin/refine_prompt"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves the refine_prompt property."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-4",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"String refine_prompt"}),"\n",(0,s.jsx)(n.h3,{id:"get-prompt_admingenerate",children:"GET /prompt_admin/generate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves the generate_prompt property."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-5",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"String generate_prompt"}),"\n",(0,s.jsx)(n.h3,{id:"get-prompt_adminrank",children:"GET /prompt_admin/rank"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves the rank_prompt property."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-6",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-6",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"String rank_prompt"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"db",children:"/db"}),"\n",(0,s.jsx)(n.h3,{id:"get-dbgrab",children:"GET /db/grab"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Calls DB_grab() to retrieve some global data."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-7",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-7",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON data"}),"\n",(0,s.jsx)(n.h3,{id:"get-dbaccount",children:"GET db/account"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves account info given some input JSON."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-8",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JSON account_query_info"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-8",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON account_data"}),"\n",(0,s.jsx)(n.h3,{id:"get-dbagent",children:"GET /db/agent"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves agent info."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-9",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-9",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON agent_data"}),"\n",(0,s.jsx)(n.h3,{id:"post-dbnew_account",children:"POST db/new_account"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Creates a new account."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-10",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JSON new_account_info"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-10",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON status_info"}),"\n",(0,s.jsx)(n.h3,{id:"post-dbnew_agent",children:"POST db/new_agent"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Creates a new agent."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-11",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JSON new_agent_info"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-11",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON status_info"}),"\n",(0,s.jsx)(n.h3,{id:"get-dbagent_dropdown",children:"GET /db/agent_dropdown"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Returns a list of agents for a dropdown."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-12",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-12",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON list_of_agents"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"translator",children:"/translator"}),"\n",(0,s.jsx)(n.h3,{id:"post-translatorrank_format",children:"POST /translator/rank_format"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Triggers the rank_format() method."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-13",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-13",children:"Returns:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"200 OK"})," on success"]}),"\n",(0,s.jsx)(n.h3,{id:"post-translatorwriting_session",children:"POST /translator/writing_session"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Starts or updates a writing session."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-14",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-14",children:"Returns:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"200 OK"})," on success"]}),"\n",(0,s.jsx)(n.h3,{id:"post-translatorwrite_chapter",children:"POST /translator/write_chapter"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Writes a new chapter based on the input JSON."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-15",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JSON chapter_info"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-15",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON chapter_data"}),"\n",(0,s.jsx)(n.h3,{id:"get-translatorstory_bank",children:"GET /translator/story_bank"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves the entire story bank as a list."]}),"\n",(0,s.jsx)(n.h4,{id:"request-bodyparams-16",children:"Request Body/Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"returns-16",children:"Returns:"}),"\n",(0,s.jsx)(n.p,{children:"JSON list_of_stories"}),"\n",(0,s.jsx)(n.p,{children:"openapi: 3.0.0"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"info:\n  title: Story Builder API\n  version: 0.0.0\n  description: API for communication between frontend user interface, LLM Agents, and MongoDB Database.\n"})}),"\n",(0,s.jsx)(n.p,{children:"paths:\n/courier:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"    post:\n      summary: Calls the LLM with a given prompt and returns text.\n      operationId: story_call\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                PLACEHOLDER:\n                  type: integer\n                key:\n                  type: string\n                prompt:\n                  type: string\n      responses:\n        '200':\n          description: A story snippet\n          content:\n            application/json:\n              schema:\n                type: string\n\n    post:\n      summary: Pushes local story content to the system.\n      operationId: story_push\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                local_story:\n                  type: string\n      responses:\n        '200':\n          description: Success\n\n    get:\n      summary: Invokes the judge() method to get a list of judgments/results\n      operationId: judge\n      responses:\n        '200':\n          description: A list of judgments\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n"})}),"\n",(0,s.jsx)(n.p,{children:"/prompt_admin:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"    get:\n      summary: Calls prompt(prompt_info) to fetch a prompt string.\n      operationId: prompt\n      parameters:\n        - name: prompt_info\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A prompt string\n          content:\n            application/json:\n              schema:\n                type: string\n\n    get:\n      summary: Retrieves the refine_prompt property.\n      operationId: refine_prompt\n      responses:\n        '200':\n          description: A refine prompt string\n          content:\n            application/json:\n              schema:\n                type: string\n\n    get:\n      summary: Retrieves the generate_prompt property.\n      operationId: generate_prompt\n      responses:\n        '200':\n          description: A generate prompt string\n          content:\n            application/json:\n              schema:\n                type: string\n\n    get:\n      summary: Retrieves the rank_prompt property.\n      operationId: rank_prompt\n      responses:\n        '200':\n          description: A rank prompt string\n          content:\n            application/json:\n              schema:\n                type: string\n"})}),"\n",(0,s.jsx)(n.p,{children:"/db:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"   get:\n     summary: Calls DB_grab() to retrieve some global data.\n     operationId: grab\n     responses:\n       '200':\n         description: Global data\n         content:\n           application/json:\n             schema:\n               type: object\n\n   get:\n     summary: Retrieves account info given some input JSON.\n     operationId: account\n     parameters:\n       - name: account_query_info\n         in: query\n         required: true\n         schema:\n           type: object\n     responses:\n       '200':\n         description: Account data\n         content:\n           application/json:\n             schema:\n               type: object\n\n   post:\n     summary: Creates a new account.\n     operationId: new_account\n     requestBody:\n       required: true\n       content:\n         application/json:\n           schema:\n             type: object\n             properties:\n               new_account_info:\n                 type: object\n     responses:\n       '200':\n         description: Status info\n         content:\n           application/json:\n             schema:\n               type: object\n\n   post:\n     summary: Creates a new agent.\n     operationId: new_agent\n     requestBody:\n       required: true\n       content:\n         application/json:\n           schema:\n             type: object\n             properties:\n               new_agent_info:\n                 type: object\n     responses:\n       '200':\n         description: Status info\n         content:\n           application/json:\n             schema:\n               type: object\n"})}),"\n",(0,s.jsx)(n.p,{children:"/translator:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"  post:\n    summary: Triggers the rank_format() method.\n    operationId: rank_format\n    responses:\n      '200':\n        description: Success\n\n  post:\n    summary: Starts or updates a writing session.\n    operationId: writing_session\n    responses:\n      '200':\n        description: Success\n\n  post:\n    summary: Writes a new chapter based on the input JSON.\n    operationId: write_chapter\n    requestBody:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              chapter_info:\n                type: object\n    responses:\n      '200':\n        description: Chapter data\n        content:\n          application/json:\n            schema:\n              type: object\n\n  get:\n    summary: Retrieves the entire story bank as a list.\n    operationId: story_bank\n    responses:\n      '200':\n        description: A list of stories\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: object\n"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(96540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);