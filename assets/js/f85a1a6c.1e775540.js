"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6244],{21926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(74848),i=n(28453);const r={sidebar_position:1},o="Unit Tests",a={id:"testing/unit-testing",title:"Unit Tests",description:"Test Library",source:"@site/docs/testing/unit-testing.md",sourceDirName:"testing",slug:"/testing/unit-testing",permalink:"/project-003-story-builder-team-1/docs/testing/unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-003-story-builder-team-1/edit/main/documentation/docs/testing/unit-testing.md",tags:[],version:"current",lastUpdatedBy:"Christopher McGarrity",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-003-story-builder-team-1/docs/category/test-procedures"},next:{title:"Integration Tests",permalink:"/project-003-story-builder-team-1/docs/testing/integration-testing"}},c={},d=[{value:"Test Library",id:"test-library",level:2},{value:"Jest",id:"jest",level:3},{value:"Supertest",id:"supertest",level:3},{value:"Running the Backend Test Cases",id:"running-the-backend-test-cases",level:2},{value:"Automatic Testing",id:"automatic-testing",level:2},{value:"View Backend Test Coverage Report",id:"view-backend-test-coverage-report",level:4}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,s.jsx)(t.h2,{id:"test-library",children:"Test Library"}),"\n",(0,s.jsx)(t.h3,{id:"jest",children:"Jest"}),"\n",(0,s.jsx)(t.p,{children:"The primary testing library is Jest. Jest is compatible with JavaScript, React, Node, and Express, making it the testing library for the Frontend and Backend."}),"\n",(0,s.jsx)(t.h3,{id:"supertest",children:"Supertest"}),"\n",(0,s.jsx)(t.p,{children:"Supertest is also used to for testing. It simulates HTTP requests. This allows for testing the Backend without starting the server each time."}),"\n",(0,s.jsx)(t.h2,{id:"running-the-backend-test-cases",children:"Running the Backend Test Cases"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Have Node installed on your machine"}),"\n",(0,s.jsx)(t.li,{children:"Run the following command when testing for the first time:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm run setup\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"3",children:["\n",(0,s.jsx)(t.li,{children:"Run the first command to test the Backend, or run the second command to test the Backend and generate a coverage report:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm run test:b\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm run test:bc\n"})}),"\n",(0,s.jsx)(t.h2,{id:"automatic-testing",children:"Automatic Testing"}),"\n",(0,s.jsxs)(t.p,{children:["On a pull request to main, the above testing process will applied through a workflow and will use the test",":bc"," command to generate a coverage report, which is then pushed to the branch that is about to be merged into main."]}),"\n",(0,s.jsxs)(t.p,{children:["On a push to main, the above testing process will be applied through a workflow and will use the test",":b"," command to test that the merged code does not cause any issues when pushed to main."]}),"\n",(0,s.jsx)(t.h4,{id:"view-backend-test-coverage-report",children:(0,s.jsx)(t.a,{href:"https://htmlpreview.github.io/?https://github.com/Capstone-Projects-2025-Spring/project-003-story-builder-team-1/blob/main/documentation/docs/testing/backend-lcov-report/index.html",children:"View Backend Test Coverage Report"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);